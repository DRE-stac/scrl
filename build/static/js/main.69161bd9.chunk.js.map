{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","owner","feePercent","depositedBalances","paymentSchedule","isMinter","bookPrices","gasPrice","network","blockchainReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","balances","blockNumber","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","apply","store","createStore","fetchDataFailed","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","_i","_arr","token","balance","wrap","_context","prev","next","getState","methods","call","sent","eth","getBalance","tokenContract","balanceOf","getBlockNumber","net","getNetworkType","getGasPrice","t0","console","log","stop","_x","connectFailed","updateAccount","_ref7","_callee7","_context7","_x12","theme","createMuiTheme","palette","primary","main","secondary","spacing","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","title","paper","padding","textAlign","color","text","disabled","backgroundColor","border","cursor","App","classes","_useState","useState","_useState2","_slicedToArray","setToken","_useState3","_useState4","recipient","setRecipient","_useState5","_useState6","amount","setAmount","_useState7","_useState8","start","setStart","_useState9","_useState10","interval","setInterval","_useState11","_useState12","tokenURI","setTokenURI","_useState13","_useState14","forwardAddress","setForwardAddress","_useState15","_useState16","spender","setSpender","_useState17","_useState18","tokenId","setTokenId","_useState19","_useState20","collection","setCollection","_useState21","_useState22","name","setName","_useState23","_useState24","description","setDescription","_useState25","_useState26","layers","setLayers","_useState27","_useState28","initialChapterHash","setInitialChapterHash","_useState29","_useState30","newCost","setNewCost","_useState31","_useState32","setFeePercent","_useState33","_useState34","symbol","setSymbol","_useState35","_useState36","participant1","setParticipant1","_useState37","_useState38","participant2","setParticipant2","_useState39","_useState40","initialBalance1","setInitialBalance1","_useState41","_useState42","initialBalance2","setInitialBalance2","_useState43","_useState44","channelId","setChannelId","_useState45","_useState46","newNonce","setNewNonce","_useState47","_useState48","newViewCount","setNewViewCount","_useState49","_useState50","newChapterURI","setNewChapterURI","_useState51","_useState52","nonce","setNonce","_useState53","_useState54","finalViewCount","setFinalViewCount","_useState55","_useState56","_tokens","setTokens","_useState57","_useState58","setBalances","_useState59","_useState60","buyTokenId","setBuyTokenId","_useState61","_useState62","setPrice","setSetPrice","_useState63","_useState64","setTransactionHistory","_useState65","_useState66","setSelectedFunction","_useState67","_useState68","_useState69","_useState70","_useState71","_useState72","contractAddress","setContractAddress","tokens","logo","_useState73","_useState74","ipfsHash","setIpfsHash","_useState75","_useState76","metadata","setMetadata","_useState77","_useState78","connecting","setConnecting","useDispatch","useSelector","_useState79","_useState80","setFeedback","_useState81","_useState82","setDepositing","_useState83","ContactForm","_useState84","nextIPFSHash","Deposit","_ref2","amountInWei","abrupt","utils","toWei","toString","depositEther","send","gasLimit","from","to","value","once","err","then","receipt","deposit","_x2","Withdraw","_ref3","_callee2","_amount","_token","transactionOptions","tokenContractAddress","_context2","withdrawAllEther","catch","Contract","withdrawTokens","_x3","_x4","mintNFT","_ref4","_callee3","_context3","_x5","_x6","_x7","ForwardAddress","_ref10","_callee9","_context9","_x16","createCollection","_ref17","_callee16","_context16","_x33","_x34","_x35","connectWallet","_ref25","_callee24","_context24","abiResponse","abi","configResponse","CONFIG","_window","ethereum","accounts","networkId","SmartContractObj","fetch","headers","Accept","json","window","isMetaMask","Web3EthContract","setProvider","Web3","request","method","NETWORKS","find","ID","CONTRACT_ADDRESS","on","location","reload","finish","_useState85","_useState86","isCustomHash","setIsCustomHash","_useState87","_useState88","selectedChapter","setSelectedChapter","_useState89","_useState90","howToUseOpen","setHowToUseOpen","_useState91","_useState92","bookViewerOpen","setBookViewerOpen","Button","handleHowToUseClose","_useState93","_useState94","drawerOpen","setDrawerOpen","_useState95","_useState96","bottomNavValue","setBottomNavValue","handleInputChange","setter","functionName","isDisabled","field","selectedFunction","functionFields","includes","allFields","Object","values","flat","Array","Set","_useState97","_useState98","setValue","isButtonDisabled","buttonFunction","fieldValues","some","useEffect","ipfsGatewayUrl","concat","axios","get","response","_jsxs","ThemeProvider","children","_jsx","CssBaseline","AppBar","position","Toolbar","IconButton","edge","onClick","MenuIcon","Typography","variant","style","fontFamily","display","flexDirection","alignItems","lineHeight","marginTop","marginLeft","Drawer","open","onClose","List","ListItem","button","ListItemText","Dialog","DialogTitle","DialogContent","DialogContentText","component","gutterBottom","DialogActions","overflow","maxHeight","scrollbarWidth","scrollbarColor","whiteSpace","marginBottom","chapter","justifyContent","TextField","label","size","onChange","e","target","select","width","hash","map","index","MenuItem","jsx","global","Container","maxWidth","Grid","container","minHeight","item","xs","md","Paper","Tabs","event","newValue","scrollButtons","TabIndicatorProps","Tab","Box","hidden","FormControl","fullWidth","margin","InputLabel","id","Select","labelId","selectedTokenObject","t","src","alt","className","Zoom","in","transitionDelay","Tooltip","CircularProgress","LinkIcon","_Fragment","DepositIcon","CreateCollectionIcon","WithdrawIcon","transactionType","transactionData","prevHistory","timestamp","Date","_toConsumableArray","MintIcon","SetAddressIcon","BottomNavigation","bottom","BottomNavigationAction","icon","SettingsIcon","HelpIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.69161bd9.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n  owner: \"\",  \n  feePercent: 0,  \n  depositedBalances: {},\n  paymentSchedule: {},\n  isMinter: {},\n  bookPrices: {},\n  gasPrice: null,\n  network: null,\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n        balances: action.payload.balances,\n        blockNumber: action.payload.blockNumber,\n        network: action.payload.network,\n        gasPrice: action.payload.gasPrice,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n      case 'APPROVE_TOKEN_REQUEST':\n  return {\n    ...state,\n    // Update state based on approval request, e.g., set a loading flag\n  };\n  case 'APPROVAL_SUCCESS':\n    // Update state to reflect approval success\n    break;\n  case 'APPROVAL_FAILED':\n    // Update state to reflect approval failure\n    break;\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n  owner: \"\",  \n  feePercent: 0,  \n  depositedBalances: {},\n  paymentSchedule: {},\n  isMinter: {},\n  bookPrices: {},\n  gasPrice: \"\",\n  network: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        balances: action.payload.balances,\n        blockNumber: action.payload.blockNumber,\n        network: action.payload.network,\n        gasPrice: action.payload.gasPrice,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_OWNER_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        owner: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_FEE_PERCENT_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        feePercent: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_DEPOSITED_BALANCES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        depositedBalances: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_PAYMENT_SCHEDULE_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        paymentSchedule: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_IS_MINTER_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        isMinter: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"FETCH_BOOK_PRICES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        bookPrices: action.payload,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n\n      // Fetch the balances of the tokens\n      const balances = {};\n      for (let token of ['ETH', 'USDC', 'MATIC', 'OP']) {\n        if (token === 'ETH') {\n          balances[token] = await store.getState().blockchain.web3.eth.getBalance(store.getState().blockchain.account);\n        } else {\n         \n\n    // Call the balanceOf function\n    const balance = await tokenContract.methods.balanceOf(store.getState().blockchain.account).call();\n\n    balances[token] = balance;\n        }\n      }\n\n      // Fetch the other cool info\n      const blockNumber = await store.getState().blockchain.web3.eth.getBlockNumber();\n      const network = await store.getState().blockchain.web3.eth.net.getNetworkType();\n      const gasPrice = await store.getState().blockchain.web3.eth.getGasPrice();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          balances,\n          blockNumber,\n          network,\n          gasPrice,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\n// Action creator for token approval request\nexport const approveTokenRequest = () => ({\n  type: 'APPROVE_TOKEN_REQUEST',\n});\n\n// Asynchronous action for approving tokens\nexport const approveTokens = (contractAddress, spender, amount) => {\n  return async (dispatch, getState) => {\n    dispatch(approveTokenRequest());\n\n    const { web3, smartContract, account } = getState().blockchain;\n    \n    // Assuming \"tokenContract\" is your ERC20 token contract instance\n    try {\n      await smartContract.methods.approve(\n        smartContract.options.address, \n        web3.utils.toWei(amount, 'ether')\n      ).send({ from: account });\n\n      // Dispatch other actions based on success, e.g., update balances\n    } catch (error) {\n      console.error(\"Approval failed\", error);\n      // Dispatch other actions based on failure\n    }\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        const network = CONFIG.NETWORKS.find(net => net.ID == networkId);\n        if (network) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Unsupported network. Please switch to a supported network.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const deposit = (amount) => {\n  return async (dispatch, getState) => {\n    const { blockchain } = getState();\n    const { account, smartContract, web3 } = blockchain;\n\n    if (!account || !smartContract || !web3) {\n      console.error('Cannot deposit: missing blockchain connection.');\n      return;\n    }\n\n    try {\n      \n\n      // Send the transaction\n      smartContract.methods.deposit(blockchain.account, amount).send({ from: account })\n        .on('transactionHash', function(hash){\n            console.log('transactionHash', hash);\n        })\n        .on('receipt', function(receipt){\n            console.log('receipt', receipt);\n        })\n        .on('confirmation', function(confirmationNumber, receipt){\n            console.log('confirmation', confirmationNumber);\n        })\n        .on('error', console.error);\n\n    } catch (err) {\n      console.error('Deposit failed:', err);\n    }\n  };\n};\nexport const mintNFT = (recipient, tokenURI) => {\n  return async (dispatch, getState) => {\n    const { web3, account, smartContract } = getState().blockchain;\n    try {\n      const gas = await smartContract.methods.mint(recipient, tokenURI).estimateGas({ from: account });\n      await smartContract.methods.mint(recipient, tokenURI).send({ from: account, gas });\n      // Dispatch any actions if necessary, for example to update the UI\n    } catch (err) {\n      console.error(\"Minting failed\", err);\n      // Dispatch any actions if necessary, for example to show an error message\n    }\n  };\n};\n\nexport const setForwardingAddress = (newAddress) => {\n  return async (dispatch, getState) => {\n    const { web3, account, smartContract } = getState().blockchain;\n\n    try {\n      // Estimate the gas needed for the transaction\n      const gas = await smartContract.methods.setForwardingAddress(newAddress).estimateGas({ from: account });\n\n      // Execute the transaction\n      await smartContract.methods.setForwardingAddress(newAddress).send({ from: account, gas });\n\n      // Dispatch any actions if necessary, for example to update the UI\n    } catch (err) {\n      console.error(\"Setting forwarding address failed\", err);\n      // Dispatch any actions if necessary, for example to show an error message\n    }\n  };\n};\n\nexport const setViewCost = (newCost) => {\n  return async (dispatch, getState) => {\n    const { web3, account, smartContract } = getState().blockchain;\n\n    try {\n      // Estimate the gas needed for the transaction\n      const gas = await smartContract.methods.setViewCost(newCost).estimateGas({ from: account });\n\n      // Execute the transaction\n      await smartContract.methods.setViewCost(newCost).send({ from: account, gas });\n\n      // Dispatch any actions if necessary, for example to update the UI\n    } catch (err) {\n      console.error(\"Setting view cost failed\", err);\n      // Dispatch any actions if necessary, for example to show an error message\n    }\n  };\n};\n\n\n\n\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Container, TextField, Button, List, ListItem, ListItemText, Typography,\n  createMuiTheme, ThemeProvider, Grid, Paper, Slide, Select, MenuItem,\n  InputLabel, FormControl, IconButton, Zoom, Fade, makeStyles, Tooltip,\n  Drawer, AppBar, Toolbar, BottomNavigation, BottomNavigationAction, CssBaseline,\n  Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Tabs, Tab, Box } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport DepositIcon from '@material-ui/icons/AccountBalanceWallet';\nimport ExecuteIcon from '@material-ui/icons/PlayCircleFilledWhite';\nimport WithdrawIcon from '@material-ui/icons/MoneyOff';\nimport TransferIcon from '@material-ui/icons/Send';\nimport MintIcon from '@material-ui/icons/Brush';\nimport SetAddressIcon from '@material-ui/icons/LocationOn';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HelpIcon from '@material-ui/icons/Help';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ApproveIcon from '@material-ui/icons/CheckCircleOutline';\nimport ViewSetIcon from '@material-ui/icons/Visibility';\nimport BurnIcon from '@material-ui/icons/Whatshot';\nimport BurnNFTIcon from '@material-ui/icons/Cancel';\nimport CreateCollectionIcon from '@material-ui/icons/CreateNewFolder';\nimport OpenChannelIcon from '@material-ui/icons/OpenInNew';\nimport CloseChannelIcon from '@material-ui/icons/Close';\nimport ContractABI from './abi.js';\nimport axios from 'axios';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect, mintNFT } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\n\nfunction HowToUseDialog({ open, onClose }) {\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>How to Use</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          // Your \"How to Use\" content goes here...\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\n\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#fff',\n    },\n    secondary: {\n      main: '#f44336',\n    },\n  },\n  spacing: 8,\n});\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  disabled: {\n    backgroundColor: 'rgba(255, 255, 255, 0.12) !important',\n    color: 'rgba(255, 255, 255, 0.5) !important',\n    border: '1px solid rgba(255, 255, 255, 0.12) !important',\n    cursor: 'not-allowed !important',\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [token, setToken] = useState('');\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [start, setStart] = useState('');\n  const [interval, setInterval] = useState('');\n  const [tokenURI, setTokenURI] = useState('');\n  const [forwardAddress, setForwardAddress] = useState('');\n  const [spender, setSpender] = useState('');\nconst [tokenId, setTokenId] = useState('');\nconst [collection, setCollection] = useState('');\nconst [name, setName] = useState('');\nconst [description, setDescription] = useState('');\nconst [layers, setLayers] = useState('');\nconst [initialChapterHash, setInitialChapterHash] = useState('');\nconst [newCost, setNewCost] = useState('');\nconst [feePercent, setFeePercent] = useState('');\nconst [symbol, setSymbol] = useState('');\nconst [participant1, setParticipant1] = useState('');\nconst [participant2, setParticipant2] = useState('');\nconst [initialBalance1, setInitialBalance1] = useState('');\nconst [initialBalance2, setInitialBalance2] = useState('');\nconst [channelId, setChannelId] = useState('');\nconst [newNonce, setNewNonce] = useState('');\nconst [newViewCount, setNewViewCount] = useState('');\nconst [newChapterURI, setNewChapterURI] = useState('');\nconst [nonce, setNonce] = useState('');\nconst [finalViewCount, setFinalViewCount] = useState('');\nconst [_tokens, setTokens] = useState('');\nconst [balances, setBalances] = useState('');\nconst [buyTokenId, setBuyTokenId] = useState(\"\");\nconst [setPrice, setSetPrice] = useState(\"\");\n  const [transactionHistory, setTransactionHistory] = useState([]);\n  const [selectedFunction, setSelectedFunction] = useState(null);\n  const [abi, setAbi] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [contractAddress, setContractAddress] = useState('');\n  const tokens = [\n    { name: 'ETH', logo: 'https://cryptologos.cc/logos/ethereum-eth-logo.png?v=025', contractAddress: '' },\n  ]; // replace with your actual tokens and contract addresses\n  const [ipfsHash, setIpfsHash] = useState(''); // Initialize with an empty string\n\n  const [metadata, setMetadata] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"Connect to Interact\");\n  const [Depositing, setDepositing] = useState(false);\n  const Form = useSelector((state) => state.ContactForm);\n  const [nextIPFSHash, setNextIPFSHash] = useState(\"\");\n\n  const handleSubmit = () => {\n    // Handle the submission logic here\n    console.log(\"Submitted next IPFS hash:\", nextIPFSHash);\n    // You can clear the input if you want\n    setNextIPFSHash(\"\");\n  };\n  const Deposit = async (amount, token) => {\n    if (amount <= 0) {\n      return;\n    }\n    setFeedback(\"Depositing...\");\n    setDepositing(true);\n\n    // Convert the amount to Wei\n    const amountInWei = blockchain.web3.utils.toWei(amount.toString(), 'ether');\n\n    if (token === 'ETH') {\n      // Deposit Ether\n      await blockchain.smartContract.methods\n        .depositEther()\n        .send({\n          gasLimit: \"500000\",\n          from: blockchain.account,\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          value: amountInWei,\n        })\n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setDepositing(false);\n        })\n        .then((receipt) => {\n          setFeedback(\"Successful Deposit!\");\n          setDepositing(false);\n          dispatch(fetchData(blockchain.account));\n        });\n    } else {\n\n      \n\n      // Deposit the tokens\n      await blockchain.smartContract.methods\n        .deposit(contractAddress, amountInWei)\n        .send({\n          gasLimit: \"500000\",\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          from: blockchain.account,\n        })\n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setDepositing(false);\n        })\n        .then((receipt) => {\n          setFeedback(\"Successful Deposit!\");\n          setDepositing(false);\n          dispatch(fetchData(blockchain.account));\n        });\n    }\n  };\n\n\n  const Withdraw = async (_amount, _token) => {\n    setFeedback(\"Withdrawing...\");\n    setDepositing(true);\n\n    const transactionOptions = {\n      gasLimit: \"500000\",\n      from: blockchain.account,\n    };\n\n    if (_token === 'ETH' && _amount) {\n      // Add value to transaction only when _amount is provided and _token is 'ETH'\n      transactionOptions.to = \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\";\n      transactionOptions.value = blockchain.web3.utils.toWei((_amount).toString(), \"ether\");\n    }\n\n    if (_token === 'ETH') {\n      // Withdraw Ether\n      blockchain.smartContract.methods\n        .withdrawAllEther()\n        .send({ from: blockchain.account })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\"Successful Withdrawal!\");\n          setDepositing(false);\n          dispatch(fetchData(blockchain.account));\n        })\n        .catch((err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setDepositing(false);\n        });\n    } else {\n\n      // Withdraw token\n      const tokenContractAddress = 'Replace this with the contract address of the token';\n      const tokenAbi = 'Replace this with the ABI  the token';\n      const tokenContract = new blockchain.web3.eth.Contract(tokenAbi, tokenContractAddress);\n\n      // Withdraw the tokens\n      await blockchain.smartContract.methods\n        .withdrawTokens(tokenContractAddress, _amount ? blockchain.web3.utils.toWei((_amount).toString(), \"ether\") : \"0\")\n        .send(transactionOptions)\n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setDepositing(false);\n        })\n        .then((receipt) => {\n          setFeedback(\"Successful Withdrawal!\");\n          setDepositing(false);\n          dispatch(fetchData(blockchain.account));\n        });\n    }\n  };\n\n  const mintNFT = async (collection, recipient, tokenURI) => {\n    setFeedback(\"Minting...\");\n    setDepositing(true);\n\n    try {\n      // Mint NFT\n      const receipt = await blockchain.smartContract.methods\n        .mintNFT(collection, recipient, tokenURI)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });\n\n      setFeedback(\"Successful Mint!\");\n      setDepositing(false);\n      dispatch(fetchData(blockchain.account));\n    } catch (err) {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setDepositing(false);\n    }\n  };\n\n  const buyBook = async (_tokenId) => {\n    setFeedback(\"Initiating book purchase...\");\n    setDepositing(true); // Assuming you use the same state for indicating ongoing transactions\n  \n    try {\n      // Buy Book\n      const receipt = await blockchain.smartContract.methods\n        .buyBook(_tokenId)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });\n  \n      setFeedback(\"Successfully purchased the book!\");\n      setDepositing(false);\n      dispatch(fetchData(blockchain.account)); // Refresh UI data\n    } catch (err) {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong. Please try again later.\");\n      setDepositing(false);\n    }\n  };\n  \n  const setBookPrice = async (_tokenId, _price) => {\n    setFeedback(\"Setting book price...\");\n    setDepositing(true); // Assuming you use the same state for indicating ongoing transactions\n  \n    try {\n      // Set Book Price\n      const receipt = await blockchain.smartContract.methods\n        .setPrice(_tokenId, _price)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });\n  \n      setFeedback(\"Successfully set the book price!\");\n      setDepositing(false);\n      dispatch(fetchData(blockchain.account)); // Refresh UI data\n    } catch (err) {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong. Please try again later.\");\n      setDepositing(false);\n    }\n  };\n\n  const approve = async (contractAddress, spender, amount) => {\n    console.log(\"Contract ABI: \", ContractABI); // Debug line\n\n    setFeedback(\"Approving...\");\n    setDepositing(true);\n    \n    // Convert the amount to Wei\n    const amountInWei = blockchain.web3.utils.toWei(amount.toString(), 'ether');\n  \n    // Create a contract instance of the ERC20 token\n    const tokenContract = new blockchain.web3.eth.Contract(ContractABI, contractAddress);\n  \n    try {\n      // Call the approve function of the ERC20 token\n      const receipt = await tokenContract.methods\n        .approve(contractAddress, spender, amountInWei)\n        .send({\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });  \n      setFeedback(\"Approved successfully!\");\n      dispatch(fetchData(blockchain.account));\n    } catch (err) {\n      console.log(err);\n      setFeedback(\"Approval failed. Please try again.\");\n    }\n  };\n  \n\n  const getChannelParticipants = async (channelId) => {\n    try {\n      const participants = await blockchain.smartContract.methods\n        .getChannelParticipants(channelId)\n        .call({to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n        gasLimit: \"500000\", \n          from: blockchain.account });\n  \n      console.log(\"Channel Participants: \", participants);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  const setViewCost = async (newCost) => {\n    setFeedback(\"Setting view cost...\");\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .setViewCost(newCost? blockchain.web3.utils.toWei((newCost).toString(), \"ether\") : \"0\")\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });  \n      setFeedback(\"View cost set successfully!\");\n      dispatch(fetchData(blockchain.account));\n    } catch (err) {\n      console.log(err);\n      setFeedback(\"Setting view cost failed. Please try again.\");\n    }\n  };\n  \n  const ForwardAddress = async (forwardAddress) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .setForwardAddress(forwardAddress)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const FeePercent = async (feePercent) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .setFeePercent(feePercent)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const burnToken = async (token, amount) => {\n        // Convert the amount to Wei\n        const amountInWei = blockchain.web3.utils.toWei(amount.toString(), 'ether');\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .burnToken(contractAddress, amountInWei)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const burnNFT = async (collection, tokenId) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .burnNFT(collection, tokenId)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const schedulePayment = async (pType, token, recipient, amount, start, interval, changeRate) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .schedulePayment(pType, contractAddress, recipient, amount, start, interval, changeRate)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const executePayments = async () => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .executePayments()\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const directTransfer = async (token, to, amount, tokenId) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .directTransfer(contractAddress, to, amount, tokenId)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createCollection = async (collection, name, symbol) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .createCollection(collection, name, symbol)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const mintNFTWithMetadata = async (collection, recipient, name, description, layers, initialChapterHash) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .mintNFTWithMetadata(collection, recipient, name, description, layers, initialChapterHash)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const addMetadata = async (tokenId, name, description, layers, chapterHash) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .addMetadata(tokenId, name, description, layers, chapterHash)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getMetadata = async (tokenId) => {\n    try {\n      const metadata = await blockchain.smartContract.methods\n        .getMetadata(tokenId)\n        .call({ \n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account });\n      return metadata;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const openChannel = async (participant1, participant2, initialBalance1, initialBalance2, tokenId) => {\n    try {\n      const channelId = await blockchain.smartContract.methods\n        .openChannel(participant1, participant2, initialBalance1, initialBalance2, tokenId)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      return channelId;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const transferEtherToChannel = async (channelId, value) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .transferEtherToChannel(channelId)\n        .send({ \n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account, value: value });\n      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateChannel = async (channelId, newNonce, newViewCount, newChapterURI, signature) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .updateChannel(channelId, newNonce, newViewCount, newChapterURI, signature)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const closeChannel = async (channelId, nonce, finalViewCount, tokens, balances, v, r, s) => {\n    try {\n      const receipt = await blockchain.smartContract.methods\n        .closeChannel(channelId, nonce, finalViewCount, tokens, balances, v, r, s)\n        .send({\n          to: \"0x81B1e0e0cFCA9aFcb2Ff5D513c754F192Deeec77\",\n          gasLimit: \"500000\",\n          from: blockchain.account,\n        });      // Handle the receipt or other actions\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  \n\n\n  \n\n\n  \n  \n\n  const connectWallet = async () => {\n    setConnecting(true);\n    try {\n      await dispatch(connect());\n    } catch (error) {\n      // Handle any errors that occur during the connection process.\n      console.log(error);\n    } finally {\n      setConnecting(false);\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n\n\n\n  const [isCustomHash, setIsCustomHash] = useState(false);\n  const [selectedChapter, setSelectedChapter] = useState(\"\");\n  \n  // Dummy chapters and their corresponding IPFS hashes\n  const chapters = [\n    { name: \"Chapter 1\", hash: \"QmTN62Na4U74SPruDRsB1N5kRBGhFB9caAoAoK5tB1zd1L\" },\n    { name: \"Chapter 2\", hash: \"QmVjqp4AWHG8XH69UkTkCuRxXiVFd4JoGDKrxK4CMrHJHr\" },\n    // ...more chapters\n  ];\n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n\n\n  const [howToUseOpen, setHowToUseOpen] = useState(false);\n  const [bookViewerOpen, setBookViewerOpen] = useState(false);\n  const handleBookViewerOpen = () => {\n    setBookViewerOpen(true);\n  };\n\n  const handleBookViewerClose = () => {\n    setBookViewerOpen(false);\n  };\n  const handleContractAddressChange = (event) => {\n    setContractAddress(event.target.value);\n  };\n\n  const handleButtonClick = async () => {\n    try {\n      const result = await contract.methods.myFunction().call({ from: blockchain.account });\n      console.log('Function result:', result);\n    } catch (err) {\n      console.error('Failed to call function:', err);\n    }\n  };\n\n  <Button onClick={handleButtonClick}>Call Function</Button>\n\n\n  const handleHowToUseOpen = () => {\n    setHowToUseOpen(true);\n  };\n\n  const handleHowToUseClose = () => {\n    setHowToUseOpen(false);\n  };\n\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  const [bottomNavValue, setBottomNavValue] = useState(0);\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n\n  };\n\n  const handleBottomNavChange = (event, newValue) => {\n    setBottomNavValue(newValue);\n  };\n  const handleTransaction = (transactionType, transactionData) => {\n    // logic to handle transaction...\n\n    // Add transaction to history at the beginning\n    setTransactionHistory(prevHistory => [\n      {\n        type: transactionType,\n        data: transactionData,\n        timestamp: new Date(),\n      },\n      ...prevHistory,\n    ]);\n\n    // Reset form and selected function\n    setSelectedFunction(null);\n    setToken('');\n    setRecipient('');\n    setAmount('');\n    setSpender('');\n    \n    // Reset Payment and Transfers Fields\n    setStart('');\n    setInterval('');\n    setTokenId('');\n    \n    // Reset NFT Operations Fields\n    setTokenURI('');\n    setCollection('');\n    setName('');\n    setDescription('');\n    setLayers('');\n    setInitialChapterHash('');\n    setSymbol('');\n    setBuyTokenId('');\n    setSetPrice('');\n    \n    // Reset Channel Management Fields\n    setParticipant1('');\n    setParticipant2('');\n    setInitialBalance1('');\n    setInitialBalance2('');\n    setChannelId('');\n    setNewNonce('');\n    setNewViewCount('');\n    setNewChapterURI('');\n    setNonce('');\n    setFinalViewCount('');\n    setTokens('');\n    setBalances('');\n    \n    // Reset Settings and Configuration Fields\n    setForwardAddress('');\n    setNewCost('');\n    setFeePercent('');\n  };\n\n\n  const handleInputChange = (setter, value, functionName) => {\n    setter(value);\n    setSelectedFunction(functionName);\n  };\n\n  const isDisabled = (field, selectedFunction) => {\n    const functionFields = {\n      'Schedule Payment': ['token', 'recipient', 'amount', 'start', 'interval'],\n      'Execute Payments': [],\n      'Deposit': ['token', 'amount'],\n      'Deposit Ether': ['amount'],\n      'Withdraw': ['token', 'amount'],\n      'Withdraw All Tokens': ['token'],\n      'Withdraw All Ether': [],\n      'Transfer': ['token', 'recipient', 'amount', 'tokenId'],\n      'Mint NFT': ['recipient', 'tokenURI'],\n      'Mint NFT With Metadata': ['collection', 'recipient', 'name', 'description', 'layers', 'initialChapterHash'],\n      'Burn NFT': ['collection', 'tokenId'],\n      'Set Forward Address': ['forwardAddress'],\n      'Set View Cost': ['newCost'],\n      'Set Fee Percent': ['_feePercent'],\n      'Approve': ['token', 'spender', 'amount'],\n      'Create Collection': ['collection', 'name', 'symbol'],\n      'Open Channel': ['participant1', 'participant2', 'initialBalance1', 'initialBalance2', 'tokenId'],\n      'Update Channel': ['channelId', 'newNonce', 'newViewCount', 'newChapterURI'],\n      'Close Channel': ['channelId', 'nonce', 'finalViewCount', 'tokens', 'balances'],\n      'Transfer Ether To Channel': ['channelId'],\n      'Connect': [],\n      \n          // ... (Same as before)\n        };\n      \n        // If a function is selected, then disable fields that are not needed for that function\n        if (selectedFunction) {\n          return !functionFields[selectedFunction].includes(field);\n        }\n      \n        // If no function is selected, then disable fields that are not common to all functions\n        const allFields = Object.values(functionFields).flat();\n        const uniqueFields = Array.from(new Set(allFields));\n        \n        return !uniqueFields.includes(field);\n      };\n      \n\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const isButtonDisabled = (buttonFunction) => {\n    const functionFields = {\n      'Schedule Payment': ['token', 'recipient', 'amount', 'start', 'interval'],\n      'Execute Payments': [],\n      'Deposit': ['token', 'amount'],\n      'Deposit Ether': ['amount'],\n      'Withdraw': ['token', 'amount'],\n      'Withdraw All Tokens': ['token'],\n      'Withdraw All Ether': [],\n      'Transfer': ['token', 'recipient', 'amount', 'tokenId'],\n      'Mint NFT': ['recipient', 'tokenURI'],\n      'Mint NFT With Metadata': ['collection', 'recipient', 'name', 'description', 'layers', 'initialChapterHash'],\n      'Burn Token': ['token', 'amount'],\n      'Burn Ether': ['amount'],\n      'Burn NFT': ['collection', 'tokenId'],\n      'Set Forward Address': ['forwardAddress'],\n      'Set View Cost': ['newCost'],\n      'Set Fee Percent': ['_feePercent'],\n      'Approve': ['token', 'spender', 'amount'],\n      'Create Collection': ['collection', 'name', 'symbol'],\n      'Open Channel': ['participant1', 'participant2', 'initialBalance1', 'initialBalance2', 'tokenId'],\n      'Update Channel': ['channelId', 'newNonce', 'newViewCount', 'newChapterURI'],\n      'Close Channel': ['channelId', 'nonce', 'finalViewCount', '_tokens', 'balances'],\n      'Transfer Ether To Channel': ['channelId'],\n      'Connect': [],\n    };\n\n    const requiredFields = functionFields[buttonFunction];\n    const fieldValues = {\n      token,\n      recipient,\n      amount,\n      start,\n      interval,\n      tokenId,\n      tokenURI,\n      collection,\n      name,\n      description,\n      layers,\n      initialChapterHash,\n      forwardAddress,\n      newCost,\n      feePercent,\n      spender,\n      symbol,\n      participant1,\n      participant2,\n      initialBalance1,\n      initialBalance2,\n      channelId,\n      newNonce,\n      newViewCount,\n      newChapterURI,\n      nonce,\n      finalViewCount,\n      _tokens,\n      buyTokenId,\n      setPrice,\n      balances\n    };\n    \n    return requiredFields.some(field => !fieldValues[field]);\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  \n  useEffect(() => {\n    if (bookViewerOpen && ipfsHash) {\n      // Use an IPFS gateway to fetch the metadata\n      const ipfsGatewayUrl = `https://ipfs.io/ipfs/${ipfsHash}`;\n\n      // Fetch metadata from IPFS\n      axios.get(ipfsGatewayUrl)\n        .then(response => {\n          // Handle successful fetch\n          setMetadata(response.data);\n        })\n        .catch(error => {\n          // Handle errors here\n          console.error(\"Error fetching from IPFS:\", error);\n        });\n    }\n  }, [bookViewerOpen, ipfsHash]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={handleDrawerOpen}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" style={{ flexGrow: 1, fontFamily: '\"Roboto Mono\", monospace' }}>\n  The_Scroll.x\n</Typography>\n\n          {blockchain.account && (\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-end' }}>\n              <div style={{ display: 'flex', alignItems: 'center' }}>\n                <Typography variant=\"body2\" style={{ lineHeight: 1 }}>\n                  Wallet Address: {blockchain.account}\n                </Typography>\n                </div>\n              {/* Add other cool information here */}\n              <div style={{ display: 'flex', alignItems: 'center', marginTop: '0.5rem' }}>\n                <Typography variant=\"body2\" style={{ lineHeight: 1, marginLeft: '1rem' }}>\n                  Network: {blockchain && blockchain.network ? blockchain.network : 'Loading...'}\n                </Typography>\n                <Typography variant=\"body2\" style={{ lineHeight: 1, marginLeft: '1rem' }}>\n                  Gas Price: {blockchain && blockchain.gasPrice ? blockchain.gasPrice : 'Loading...'}\n                </Typography>\n              </div>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n\n            \n\n\n\n      <Drawer open={drawerOpen} onClose={handleDrawerClose}>\n        <List>\n          <ListItem button onClick={handleHowToUseOpen}>\n            <ListItemText primary=\"How to Use\" />\n          </ListItem>\n          <ListItem button onClick={handleBookViewerOpen}>\n            <ListItemText primary=\"BookViewer\" />\n          </ListItem>\n          \n          <ListItem button onClick={() => console.log('Clicked on About')}>\n            <ListItemText primary=\"About\" />\n          </ListItem>\n          <ListItem button onClick={() => console.log('Clicked on Logout')}>\n            <ListItemText primary=\"Logout\" style={{ color: 'red' }} />\n          </ListItem>\n        </List>\n\n      </Drawer>\n      <Dialog open={howToUseOpen} onClose={handleHowToUseClose}>\n        <DialogTitle>How to Use</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom style={{ marginTop: '2rem' }}>\n              How to Use\n            </Typography>\n            <Typography variant=\"body1\">\n              <strong>Token Management Section:</strong>\n              <br />\n              <strong>Transaction Actions Section:</strong>\n              <br />\n              This section contains action buttons for different transactions. Each button is represented by an icon and a tooltip that appears when you hover over the icon. The tooltip provides a brief description of the action.\n              <br /><br />\n              Here's a rundown of the actions:\n              <br /><br />\n              <strong>Deposit:</strong> This allows you to deposit a specific amount of a token. You'll need to input the token and the amount.\n              <br /><br />\n              <strong>Withdraw:</strong> This allows you to withdraw a specific amount of a token. You'll need to input the token and the amount.\n              <br /><br />\n              <strong>Mint NFT:</strong> This allows you to mint a new NFT to a recipient. You'll need to input the recipient and the token URI.\n              <br /><br />\n              <strong>Set Forward Address:</strong> This allows you to set a forward address. You'll need to input the forward address.\n            </Typography>         </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleHowToUseClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog \n  open={bookViewerOpen} \n  onClose={() => {\n    setBookViewerOpen(false);\n  }}\n>\n  <DialogTitle>\n    Book Viewer\n  </DialogTitle>\n\n  <DialogContent \n    style={{\n      overflow: 'auto', \n      maxHeight: '600px', \n      scrollbarWidth: 'thin', \n      scrollbarColor: 'black grey'\n    }}\n  >\n    <DialogContentText>\n      {metadata ? (\n        <div style={{ whiteSpace: 'pre-line' }}>\n          <Typography \n            variant=\"h6\" \n            style={{ marginBottom: '20px' }}\n          >\n            {metadata.title}\n          </Typography>\n          <Typography \n            variant=\"body1\" \n            style={{ textAlign: 'justify', lineHeight: '1.6', marginBottom: '10px' }}\n          >\n            {metadata.chapter}\n          </Typography>\n          <Typography \n            variant=\"body1\" \n            style={{ textAlign: 'justify', lineHeight: '1.6' }}\n          >\n            {metadata.text}\n          </Typography>\n        </div>\n      ) : (\n        \"Loading...\"\n      )}\n    </DialogContentText>\n  </DialogContent>\n\n  <DialogActions \n    style={{ \n      display: 'flex', \n      justifyContent: 'space-between', \n      padding: '8px' \n    }}\n  >\n    <div style={{ display: 'flex', alignItems: 'center' }}>\n        {isCustomHash ? (\n          <TextField\n            label=\"Custom IPFS Hash\"\n            variant=\"outlined\"\n            size=\"small\"\n            value={nextIPFSHash}\n            onChange={(e) => setIpfsHash(e.target.value)}\n          />\n        ) : (\n          <TextField\n            select\n            label=\"Chapter\"\n            variant=\"outlined\"\n            size=\"small\"\n\n            value={selectedChapter}\n            style={{ width: '300px'}}  // Set the width here\n            onChange={(e) => {\n              if (e.target.value === \"custom\") {\n                setIsCustomHash(true);\n              } else {\n                setSelectedChapter(e.target.value);\n                setIpfsHash(e.target.value); // Assuming you want to set the IPFS hash here\n              }\n            }}\n          >\n            {chapters.map((chapter, index) => (\n              <MenuItem key={index} value={chapter.hash}>\n                {chapter.name}\n              </MenuItem>\n            ))}\n            <MenuItem value=\"custom\">Custom...</MenuItem>\n          </TextField>\n        )}\n        {isCustomHash && (\n          <Button\n            onClick={() => {\n              setIsCustomHash(false);\n            }}\n          >\n            Back\n          </Button>\n        )}\n      </div>\n    <Button \n      onClick={() => {\n        setBookViewerOpen(false);\n      }} \n      color=\"primary\"\n    >\n      Close\n    </Button>\n  </DialogActions>\n\n  <style jsx global>{`\n    /* Style the scrollbar */\n    ::-webkit-scrollbar {\n      width: 5px;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: black;\n      border-radius: 5px;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: white;\n    }\n    ::-webkit-scrollbar-track {\n      background: grey;\n      border-radius: 5px;\n    }\n  `}</style>\n</Dialog>\n\n\n\n      <Container maxWidth=\"lg\" justifyContent=\"center\" alignItems=\"center\">\n        <Typography variant=\"h4\" style={{fontFamily: '\"Roboto Mono\", monospace' }} component=\"h1\" gutterBottom>\n        <br />\n          Dashboard\n        </Typography>\n\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\" style={{ minHeight: '80vh' }}>\n                    <Grid item xs={12} md={4}>\n            <Paper style={{ padding: theme.spacing(1), color: theme.palette.text.secondary }}>\n              <Grid item xs={12} md={12}>\n\n\n<div>\n    <Tabs value={value} onChange={handleChange}  variant=\"scrollable\" scrollButtons=\"auto\" TabIndicatorProps={{ style: { backgroundColor: 'green' } }}>\n      <Tab label=\"General Operations\" />\n      <Tab label=\"NFT Operations\" />\n    </Tabs>\n    <Box hidden={value !== 0}>\n      {/* General Operations Fields */}\n      <FormControl fullWidth margin=\"normal\">\n  <InputLabel id=\"token-label\">Token</InputLabel>\n  <Select\n    labelId=\"token-label\"\n    value={token}\n    onChange={e => {\n      const selectedTokenObject = tokens.find(t => t.name === e.target.value);\n      if (selectedTokenObject) {\n        setToken(selectedTokenObject.name);\n        setContractAddress(selectedTokenObject.contractAddress);\n      }\n    }}\n  >\n    {tokens.map((token, index) => (\n      <MenuItem value={token.name} key={index}>\n        <img src={token.logo} alt={token.name} style={{ width: '25px', marginRight: '10px' }} />\n        {token.name}\n      </MenuItem>\n    ))}\n  </Select>\n</FormControl>\n\n            <TextField label=\"Recipient\" value={recipient} onChange={e => handleInputChange(setRecipient, e.target.value, 'Transfer')} fullWidth margin=\"normal\" className={isDisabled('recipient') ? classes.disabled : ''} disabled={isDisabled('recipient')} />\n            <TextField label=\"Amount\" value={amount} onChange={e => handleInputChange(setAmount, e.target.value, 'Deposit')} fullWidth margin=\"normal\" className={isDisabled('amount') ? classes.disabled : ''} disabled={isDisabled('amount')} />\n\n    </Box>\n    <Box hidden={value !== 2}>\n      {/* Payment and Transfers Fields */}\n      <List>\n      {/* Include your TextField components for Schedule Payment, Deposit, Withdraw, Transfer, etc. here */}\n      </List>\n    </Box>\n    <Box hidden={value !== 1}>\n      {/* NFT Operations Fields */}\n      <List>\n            {/* Include your TextField components for Mint NFT, Burn NFT, Create Collection, etc. here */}\n            <TextField label=\"Token URI\" value={tokenURI} onChange={e => handleInputChange(setTokenURI, e.target.value, 'Mint NFT')} fullWidth margin=\"normal\" className={isDisabled('tokenURI') ? classes.disabled : ''} disabled={isDisabled('tokenURI')} />\n<TextField label=\"Collection\" value={collection} onChange={e => handleInputChange(setCollection, e.target.value, 'Mint NFT With Metadata')} fullWidth margin=\"normal\" className={isDisabled('collection') ? classes.disabled : ''} disabled={isDisabled('collection')} />\n<TextField label=\"Name\" value={name} onChange={e => handleInputChange(setName, e.target.value, 'Create Collection')} fullWidth margin=\"normal\" className={isDisabled('name') ? classes.disabled : ''} disabled={isDisabled('name')} />\n<TextField label=\"Symbol\" value={symbol} onChange={e => handleInputChange(setSymbol, e.target.value, 'Create Collection')} fullWidth margin=\"normal\" className={isDisabled('symbol') ? classes.disabled : ''} disabled={isDisabled('symbol')} />\n          </List>\n    </Box>\n    <Box hidden={value !== 3}>\n      {/* Channel Management Fields */}\n      <List>\n {/* Include your TextField components for Open Channel, Update Channel, Close Channel, etc. here */}\n          </List>\n    </Box>\n    <Box hidden={value !== 4}>\n      {/* Settings and Configuration Fields */}\n      <List>\n            \n            {/* Include your TextField components for Set Forward Address, Set View Cost, Set Fee Percent, Transfer Ether To Channel, etc. here */}\n\n            </List>\n    </Box>\n  </div>\n       \n      </Grid>\n\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Paper style={{ padding: theme.spacing(2), color: theme.palette.text.secondary }}>\n              <Zoom in={true} style={{ transitionDelay: '300ms' }}>\n                <Tooltip title={isButtonDisabled('Connect') ? 'Fill all required fields' : 'Connect'}>\n                  <span>\n                    <IconButton onClick={connectWallet} disabled={isButtonDisabled('Connect') || connecting}>\n                      {connecting ? <CircularProgress size={24} /> : <LinkIcon />}\n                    </IconButton>\n\n                  </span>\n                </Tooltip>\n              </Zoom>\n              {blockchain.errorMsg !== \"\" ? (\n                <>\n                  <Typography variant=\"body1\" style={{ marginTop: '1rem', textAlign: \"center\" }}>\n                    {blockchain.errorMsg}\n                  </Typography>\n\n                </>\n              ) : null}\n\n\n              <Typography variant=\"body1\" component=\"p\" gutterBottom>\n                Your Scroll Dashboard provides easy digital asset management. Token Management (for token selection, deposit, withdrawl, minting NFTs, etc.), Transaction Actions (for performing various transactions like deposits, withdrawals, and transfers), and Transaction History (for past transaction records). The bottom navigation bar provides quick access to Home and Settings for your convenience.\n                </Typography>\n\n\n\n\n\n              <Zoom in={true} style={{ transitionDelay: '300ms' }}>\n                <Tooltip title={isButtonDisabled('Deposit') ? 'Fill all required fields' : 'Deposit'}>\n                  <span>\n                    <IconButton onClick={() => Deposit(amount, token)} disabled={isButtonDisabled('Deposit')}>\n                      <DepositIcon />\n                    </IconButton>\n\n                  </span>\n                </Tooltip>\n              </Zoom>\n\n\n\n<Zoom in={true} style={{ transitionDelay: '500ms' }}>\n  <Tooltip title=\"Create Collection\">\n    <span>\n      <IconButton onClick={() => createCollection(collection, name, symbol)} disabled={isButtonDisabled('Create Collection')}>\n        <CreateCollectionIcon />\n      </IconButton>\n    </span>\n  </Tooltip>\n</Zoom>\n\n\n\n\n\n              <Zoom in={true} style={{ transitionDelay: '400ms' }}>\n                <Tooltip title={isButtonDisabled('Withdraw') ? 'Fill all required fields' : 'Withdraw'}>\n                  <span>\n                    <IconButton onClick={() => Withdraw(amount, token)} disabled={isButtonDisabled('Withdraw')}>\n                      <WithdrawIcon />\n                    </IconButton>\n                  </span>\n                </Tooltip>\n              </Zoom>\n\n\n             \n              <Zoom in={true} style={{ transitionDelay: '600ms' }}>\n                <Tooltip title={isButtonDisabled('Mint NFT') ? 'Fill all required fields' : 'Mint NFT'}>\n                  <span>\n                    <IconButton onClick={() => { handleTransaction('Mint NFT', { recipient, tokenURI }); mintNFT(collection, recipient, tokenURI); }} disabled={isButtonDisabled('Mint NFT')}>\n                      <MintIcon />\n                    </IconButton>\n                  </span>\n                </Tooltip>\n              </Zoom>\n\n\n              <Zoom in={true} style={{ transitionDelay: '700ms' }}>\n                <Tooltip title={isButtonDisabled('Set Forward Address') ? 'Fill all required fields' : 'Set Forward Address'}>\n                  <span>\n                    <IconButton onClick={() => ForwardAddress(forwardAddress)} disabled={isButtonDisabled('Set Forward Address')}>\n                      <SetAddressIcon />\n                    </IconButton>\n                  </span>\n                </Tooltip>\n              </Zoom>\n\n              \n\n\n            </Paper>\n          </Grid>\n\n\n        </Grid>\n      </Container>\n      <BottomNavigation value={bottomNavValue} onChange={handleBottomNavChange} style={{ position: 'fixed', bottom: 0, width: '100%' }}>\n        <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={<SettingsIcon />} />\n        <BottomNavigationAction label=\"Help\" value=\"help\" icon={<HelpIcon />} />\n        {/* Add more bottom navigation items here */}\n      </BottomNavigation>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}